{"version":3,"file":"mapbox-layerswitcher.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils/defaultValue.js","../src/template/SimpleSwitcher1.js","../src/template/SimpleSwitcher2.js","../src/template/TreeSwitcher1.js","../src/core/MapboxLayerSwitcher.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/**\r\n * Returns the first parameter if not undefined, otherwise the second parameter.\r\n * Useful for setting a default value for a parameter.\r\n *\r\n * @function\r\n *\r\n * @param {*} a\r\n * @param {*} b\r\n * @returns {*} Returns the first parameter if not undefined, otherwise the second parameter.\r\n *\r\n * @example\r\n * param = Cesium.defaultValue(param, 'default');\r\n */\r\n function defaultValue(a, b) {\r\n    if (a !== undefined && a !== null) {\r\n      return a;\r\n    }\r\n    return b;\r\n  }\r\n  \r\n  /**\r\n   * A frozen empty object that can be used as the default value for options passed as\r\n   * an object literal.\r\n   * @type {Object}\r\n   * @memberof defaultValue\r\n   */\r\n  defaultValue.EMPTY_OBJECT = Object.freeze({});\r\n  \r\n  export default defaultValue;","class SimpleSwitcher1 {\r\n    constructor(map, container, layers, activemode) {\r\n        this._map = map;\r\n        this._container = container;\r\n        this._layers = layers;\r\n        this._activemode = activemode;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        if (!this._layers) return;\r\n\r\n        this._container.className = 'mapboxgl-ctrl';\r\n\r\n        this._panel = document.createElement('nav');\r\n        this._panel.id = 'ml-panel-1';\r\n        this._panel.className = 'ml-panel-1';\r\n        this._panelContentStr = '';\r\n\r\n        if (this._activemode !== 'none') {\r\n            this.createLayerSwitcherBtn();\r\n        }\r\n\r\n        this.layersClassify();\r\n\r\n        this.createOverlaysPanel();\r\n        this.createBasemapsPanel();\r\n\r\n        this._panel.innerHTML = this._panelContentStr;\r\n        this._container.appendChild(this._panel);\r\n\r\n        this.addPanelEvent();\r\n    }\r\n\r\n    /**\r\n     * 将layers划分成overlays和basemaps两个数组中，便于分类管理\r\n     */\r\n    layersClassify() {\r\n        this._overlays = [];\r\n        this._basemaps = [];\r\n\r\n        let layers = this._layers;\r\n\r\n        for (let i = 0; i < layers.length; i++) {\r\n            let layer = layers[i];\r\n            let { type } = layer;\r\n\r\n            if (type === 'base') {\r\n                this._basemaps.push(layer);\r\n            } else {\r\n                this._overlays.push(layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建图层选择器控件\r\n     */\r\n    createLayerSwitcherBtn() {\r\n        this._layerSwitcherBtn = document.createElement('button');\r\n        this._layerSwitcherBtn.className = 'ml-layerSwitcherBtn';\r\n\r\n        switch (this._activemode) {\r\n            case 'click':\r\n                this.layerSwitcherBtnClicKMode();\r\n                break;\r\n            case 'mouseover':\r\n                this.layerSwitcherBtnMouseOverMode();\r\n                break;\r\n        }\r\n    }\r\n\r\n    layerSwitcherBtnClicKMode() {\r\n        this._layerSwitcherBtn.addEventListener('click', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis === 'none') {\r\n                this._panel.setAttribute('style', 'display:block');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:none');\r\n            }\r\n        })\r\n\r\n        this._map.on('click', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis !== 'none') {\r\n                this._panel.setAttribute('style', 'display:none');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:block');\r\n            }\r\n        })\r\n\r\n        this._panel.setAttribute('style', 'display:none');\r\n        this._container.appendChild(this._layerSwitcherBtn);\r\n    }\r\n\r\n    layerSwitcherBtnMouseOverMode() {\r\n        this._layerSwitcherBtn.addEventListener('mouseenter', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis === 'none') {\r\n                this._panel.setAttribute('style', 'display:block');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:none');\r\n            }\r\n        })\r\n\r\n        this._panel.addEventListener('mouseleave', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis !== 'none') {\r\n                this._panel.setAttribute('style', 'display:none');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:block');\r\n            }\r\n        })\r\n\r\n        this._panel.setAttribute('style', 'display:none');\r\n        this._container.appendChild(this._layerSwitcherBtn);\r\n    }\r\n\r\n    /**\r\n     * 创建basemap图层面板\r\n     */\r\n    createBasemapsPanel() {\r\n        let basemaps = this._basemaps;\r\n\r\n        for (let i = 0; i < basemaps.length; i++) {\r\n            let { id, name, type } = basemaps[i];\r\n            this._panelContentStr +=\r\n                `<input type='radio' id='${id}' layertype='${type}' name='${type}' checked='checked' />\r\n                <label for='${id}' class='textnoselect'>${name ? name : id}</label>`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建overlays图层面板\r\n     */\r\n    createOverlaysPanel() {\r\n        this._checked = {};\r\n        let overlays = this._overlays;\r\n\r\n        for (let i = 0; i < overlays.length; i++) {\r\n            let { id, name, type } = overlays[i];\r\n\r\n            this._panelContentStr +=\r\n                `<input type='checkbox' id='${id}' layertype='${type ? type : ''}' checked='checked' />\r\n                <label for='${id}' class='textnoselect'>${name ? name : id}</label>`;\r\n\r\n            this._checked[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 给图层面板添加点击事件\r\n     */\r\n    addPanelEvent() {\r\n        this._map.once('load', () => {\r\n            document.getElementById('ml-panel-1').addEventListener('change', e => {\r\n                let type = e.target.attributes.layertype.nodeValue;\r\n\r\n                if (type === 'base') {// base layers\r\n                    this.changeBaseMap(e);\r\n                } else { // Overlay layers\r\n                    this.changeOverlaysVisible(e);\r\n                }\r\n\r\n                this._map._update();\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 切换basemap\r\n     * @param {Event} e \r\n     */\r\n    changeBaseMap(e) {\r\n        let mapstyle = e.target.id;\r\n        this._map.setStyle(mapstyle);\r\n\r\n        this._map.on('style.load', () => {\r\n            for (let layerId in this._checked) {\r\n                let visibility = this._checked[layerId] ? 'visible' : 'none';\r\n                this._map.setLayoutProperty(layerId, 'visibility', visibility);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 改变overlay图层显隐性\r\n     * @param {Event} e \r\n     */\r\n    changeOverlaysVisible(e) {\r\n        let layerId = e.target.id;\r\n\r\n        if (e.target.checked) {\r\n            this._map.setLayoutProperty(layerId, 'visibility', 'visible');\r\n            this._checked[layerId] = true;\r\n        } else {\r\n            this._map.setLayoutProperty(layerId, 'visibility', 'none');\r\n            this._checked[layerId] = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default SimpleSwitcher1;","class SimpleSwitcher2 {\r\n    constructor(map, container, layers, activemode) {\r\n        this._map = map;\r\n        this._container = container;\r\n        this._layers = layers;\r\n        this._activemode = activemode;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        if (!this._layers) return;\r\n\r\n        this._container.className = 'mapboxgl-ctrl';\r\n\r\n        this._panel = document.createElement('nav');\r\n        this._panel.id = 'ml-panel-2';\r\n        this._panel.className = 'ml-panel-2';\r\n        this._panelContentStr = '';\r\n\r\n        if (this._activemode !== 'none') {\r\n            this.createLayerSwitcherBtn();\r\n        }\r\n\r\n        this.layersClassify();\r\n\r\n        this.createOverlaysPanel();\r\n        this.createBasemapsPanel();\r\n\r\n        this._panel.innerHTML = this._panelContentStr;\r\n        this._container.appendChild(this._panel);\r\n\r\n        this.addPanelEvent();\r\n    }\r\n\r\n    /**\r\n     * 将layers划分成overlays和basemaps两个数组中，便于分类管理\r\n     */\r\n    layersClassify() {\r\n        this._overlays = [];\r\n        this._basemaps = [];\r\n\r\n        let layers = this._layers;\r\n\r\n        for (let i = 0; i < layers.length; i++) {\r\n            let layer = layers[i];\r\n            let { type } = layer;\r\n\r\n            if (type === 'base') {\r\n                this._basemaps.push(layer);\r\n            } else {\r\n                this._overlays.push(layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建图层选择器控件\r\n     */\r\n    createLayerSwitcherBtn() {\r\n        this._layerSwitcherBtn = document.createElement('button');\r\n        this._layerSwitcherBtn.className = 'ml-layerSwitcherBtn';\r\n\r\n        switch (this._activemode) {\r\n            case 'click':\r\n                this.layerSwitcherBtnClicKMode();\r\n                break;\r\n            case 'mouseover':\r\n                this.layerSwitcherBtnMouseOverMode();\r\n                break;\r\n        }\r\n    }\r\n\r\n    layerSwitcherBtnClicKMode() {\r\n        this._layerSwitcherBtn.addEventListener('click', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis === 'none') {\r\n                this._panel.setAttribute('style', 'display:block');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:none');\r\n            }\r\n        })\r\n\r\n        this._map.on('click', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis !== 'none') {\r\n                this._panel.setAttribute('style', 'display:none');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:block');\r\n            }\r\n        })\r\n\r\n        this._panel.setAttribute('style', 'display:none');\r\n        this._container.appendChild(this._layerSwitcherBtn);\r\n    }\r\n\r\n    layerSwitcherBtnMouseOverMode() {\r\n        this._layerSwitcherBtn.addEventListener('mouseenter', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis === 'none') {\r\n                this._panel.setAttribute('style', 'display:block');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:none');\r\n            }\r\n        })\r\n\r\n        this._panel.addEventListener('mouseleave', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis !== 'none') {\r\n                this._panel.setAttribute('style', 'display:none');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:block');\r\n            }\r\n        })\r\n\r\n        this._panel.setAttribute('style', 'display:none');\r\n        this._container.appendChild(this._layerSwitcherBtn);\r\n    }\r\n\r\n    /**\r\n     * 创建basemap图层面板\r\n     */\r\n    createBasemapsPanel() {\r\n        let basemaps = this._basemaps;\r\n        // let curStyle = this._map;\r\n\r\n        for (let i = 0; i < basemaps.length; i++) {\r\n            let { id, name, type } = basemaps[i];\r\n            this._panelContentStr +=\r\n                `<a id='${id}' name='base' href='#' class='${i === 0 ? 'active' : ''}' layertype='${type ? type : ''}'>${name ? name : id}</a>`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建overlays图层面板\r\n     */\r\n    createOverlaysPanel() {\r\n        this._checked = {};\r\n        let overlays = this._overlays;\r\n\r\n        for (let i = 0; i < overlays.length; i++) {\r\n            let { id, name, type } = overlays[i];\r\n\r\n            this._panelContentStr +=\r\n                `<a id='${id}' href='#' class='active' layertype='${type ? type : ''}'>${name ? name : id}</a>`;\r\n\r\n            this._checked[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 给图层面板添加点击事件\r\n     */\r\n    addPanelEvent() {\r\n        this._map.once('load', () => {\r\n            document.getElementById('ml-panel-2').addEventListener('click', e => {\r\n                let type = e.target.attributes.layertype.nodeValue;\r\n\r\n                if (type === 'base') {// base layers\r\n                    this.changeBaseMap(e);\r\n                } else { // Overlay layers\r\n                    this.changeOverlaysVisible(e);\r\n                }\r\n\r\n                this._map._update();\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 切换basemap\r\n     * @param {Event} e \r\n     */\r\n    changeBaseMap(e) {\r\n        let mapstyle = e.target.id;\r\n        this._map.setStyle(mapstyle, { diff: false }); // todo: 此处有性能损失，待评估\r\n\r\n        let alinkArrLike = e.target.parentNode.children;\r\n        for (let i = 0; i < alinkArrLike.length; i++) {\r\n            if (alinkArrLike[i].name !== 'base') continue;\r\n\r\n            if (alinkArrLike[i].id !== mapstyle) {\r\n                alinkArrLike[i].className = '';\r\n            } else {\r\n                alinkArrLike[i].className = 'active';\r\n            }\r\n        }\r\n\r\n        this._map.once('style.load', () => {\r\n            for (let layerId in this._checked) {\r\n                let visibility = this._checked[layerId] ? 'visible' : 'none';\r\n                this._map.setLayoutProperty(layerId, 'visibility', visibility);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 改变overlay图层显隐性\r\n     * @param {Event} e \r\n     */\r\n    changeOverlaysVisible(e) {\r\n        let layerId = e.target.id;\r\n        let alink = document.getElementById(layerId);\r\n\r\n        if (!this._checked[layerId]) {\r\n            this._map.setLayoutProperty(layerId, 'visibility', 'visible');\r\n            alink.className = 'active';\r\n            this._checked[layerId] = true;\r\n        } else {\r\n            this._map.setLayoutProperty(layerId, 'visibility', 'none');\r\n            alink.className = '';\r\n            this._checked[layerId] = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default SimpleSwitcher2;","class TreeSwitcher1 {\r\n    constructor(map, container, layers, activemode) {\r\n        this._map = map;\r\n        this._container = container;\r\n        this._layers = layers;\r\n        this._activemode = activemode;\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        if (!this._layers) return;\r\n\r\n        this._container.className = 'mapboxgl-ctrl';\r\n\r\n        this._panel = document.createElement('div');\r\n        this._panel.id = 'ml-panel-tree1';\r\n        this._panel.className = 'ml-panel-tree1';\r\n\r\n        this._panelContent = document.createElement('ul');\r\n        this._panelContent.name = 'ml-parentul';\r\n\r\n        if (this._activemode !== 'none') {\r\n            this.createLayerSwitcherBtn();\r\n        }\r\n\r\n        this.layersClassify();\r\n\r\n        this.createOverlaysPanel();\r\n        this.createBasemapsPanel();\r\n\r\n        this._panel.appendChild(this._panelContent);\r\n        this._container.appendChild(this._panel);\r\n\r\n        this.addBasemapEvent();\r\n        this.addOverlaysEvent();\r\n    }\r\n\r\n    /**\r\n     * 将layers划分成overlays和basemaps两个数组中，便于分类管理\r\n     */\r\n    layersClassify() {\r\n        this._overlays = [];\r\n        this._basemaps = [];\r\n\r\n        let layers = this._layers;\r\n\r\n        for (let i = 0; i < layers.length; i++) {\r\n            let layer = layers[i];\r\n            let { type } = layer;\r\n            if (type === 'base') {\r\n                this._basemaps.push(layer);\r\n            } else {\r\n                this._overlays.push(layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建图层选择器控件\r\n     */\r\n    createLayerSwitcherBtn() {\r\n        this._layerSwitcherBtn = document.createElement('button');\r\n        this._layerSwitcherBtn.className = 'ml-layerSwitcherBtn';\r\n\r\n        switch (this._activemode) {\r\n            case 'click':\r\n                this.layerSwitcherBtnClicKMode();\r\n                break;\r\n            case 'mouseover':\r\n                this.layerSwitcherBtnMouseOverMode();\r\n                break;\r\n        }\r\n    }\r\n\r\n    layerSwitcherBtnClicKMode() {\r\n        this._layerSwitcherBtn.addEventListener('click', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis === 'none') {\r\n                this._panel.setAttribute('style', 'display:block');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:none');\r\n            }\r\n        })\r\n\r\n        this._map.on('click', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis !== 'none') {\r\n                this._panel.setAttribute('style', 'display:none');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:block');\r\n            }\r\n        })\r\n\r\n        this._panel.setAttribute('style', 'display:none');\r\n        this._container.appendChild(this._layerSwitcherBtn);\r\n    }\r\n\r\n    layerSwitcherBtnMouseOverMode() {\r\n        this._layerSwitcherBtn.addEventListener('mouseenter', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis === 'none') {\r\n                this._panel.setAttribute('style', 'display:block');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:none');\r\n            }\r\n        })\r\n\r\n        this._panel.addEventListener('mouseleave', () => {\r\n            let panelVis = this._panel.style.display;\r\n            if (panelVis !== 'none') {\r\n                this._panel.setAttribute('style', 'display:none');\r\n                this._layerSwitcherBtn.setAttribute('style', 'display:block');\r\n            }\r\n        })\r\n\r\n        this._panel.setAttribute('style', 'display:none');\r\n        this._container.appendChild(this._layerSwitcherBtn);\r\n    }\r\n\r\n    /**\r\n     * 创建basemap图层面板\r\n     */\r\n    createBasemapsPanel() {\r\n        let basemaps = this._basemaps;\r\n        let len = basemaps.length;\r\n\r\n        if (len > 0) {\r\n            let li = document.createElement('li');\r\n            li.className = 'ml-basemap-group';\r\n            li.id = 'ml-basemap-group';\r\n            let label = document.createElement('label');\r\n            label.innerText = 'Base maps';\r\n            label.className = 'ml-basemap-group-label'\r\n            li.appendChild(label);\r\n\r\n            this._panelContent.appendChild(li);\r\n\r\n            let ul = document.createElement('ul');\r\n            let listr = '';\r\n\r\n            for (let i = 0; i < len; i++) {\r\n                let { id, name, type } = basemaps[i];\r\n                listr +=\r\n                    `<li class='ml-basemap-layer'>\r\n                        <input type='radio' name='ml-${type}map-radio' id='${id}' checked='${i === 0 ? 'checked' : ''}'/>\r\n                        <label for='${type}'>${name ? name : id}</label>\r\n                    </li>`;\r\n            }\r\n\r\n            ul.innerHTML = listr;\r\n            li.appendChild(ul);\r\n\r\n            this._panelContent.appendChild(li);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化overlays图层面板\r\n     */\r\n    createOverlaysPanel() {\r\n        this._checked = {};\r\n        let overlays = this._overlays;\r\n        let len = overlays.length;\r\n\r\n        if (len > 0) {\r\n            let li = document.createElement('li');\r\n            li.className = 'ml-overlay-group';\r\n            li.id = 'ml-overlay-group';\r\n\r\n            let button = document.createElement('button');\r\n            button.addEventListener('click', e => {\r\n                let btnClassname = e.target.className;\r\n                if (btnClassname.includes('ml-menu-button-close')) {\r\n                    e.target.className = '';\r\n                    li.classList.remove('ml-menu-close');\r\n                } else {\r\n                    e.target.className = 'ml-menu-button-close';\r\n                    li.classList.add('ml-menu-close');\r\n                }\r\n\r\n            })\r\n\r\n            let input = document.createElement('input');\r\n            input.type = 'checkbox';\r\n            input.id = 'ml-layergroup-checkbox';\r\n            input.checked = 'checked';\r\n\r\n            let label = document.createElement('label');\r\n            label.innerText = 'Overlays';\r\n            label.className = 'ml-overlay-group-label'\r\n            label.for = 'ml-layergroup-checkbox';\r\n\r\n            li.appendChild(button);\r\n            li.appendChild(input);\r\n            li.appendChild(label);\r\n\r\n            this._panelContent.appendChild(li);\r\n\r\n            this.createSubTreeNode(overlays, li);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 递归实现overlays面板各父子节点创建\r\n     * @param {Array} overlays - overlays图层数组\r\n     * @param {HTMLElement} parentli - li元素节点\r\n     */\r\n    createSubTreeNode(overlays, parentli) {\r\n        let len = overlays.length;\r\n\r\n        let ul = document.createElement('ul');\r\n        ul.name = 'ml-parentul';\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let overlay = overlays[i];\r\n            let { id, name, children } = overlay;\r\n\r\n            if (children) {\r\n                let li = document.createElement('li');\r\n                li.className = 'ml-overlay-group';\r\n\r\n                let button = document.createElement('button');\r\n                button.addEventListener('click', e => {\r\n                    let btnClassname = e.target.className;\r\n                    if (btnClassname.includes('ml-menu-button-close')) {\r\n                        e.target.className = '';\r\n                        li.classList.remove('ml-menu-close');\r\n                    } else {\r\n                        e.target.className = 'ml-menu-button-close';\r\n                        li.classList.add('ml-menu-close');\r\n                    }\r\n                })\r\n\r\n                let input = document.createElement('input');\r\n                input.type = 'checkbox';\r\n                input.name = 'ml-layergroup-checkbox';\r\n                input.checked = 'checked';\r\n\r\n                let label = document.createElement('label');\r\n                label.className = 'ml-overlay-group-label';\r\n                label.innerText = name ? name : id;\r\n\r\n                li.appendChild(button);\r\n                li.appendChild(input);\r\n                li.appendChild(label);\r\n                ul.appendChild(li);\r\n\r\n                this.createSubTreeNode(children, li);\r\n            } else {\r\n                let li = document.createElement('li');\r\n                li.className = 'ml-overlay-layer';\r\n                li.id = id;\r\n\r\n                let input = document.createElement('input');\r\n                input.type = 'checkbox';\r\n                input.name = 'ml-overlay-checkbox'\r\n                input.checked = 'checked';\r\n                this._checked[id] = true;\r\n\r\n                let label = document.createElement('label');\r\n                label.innerText = name ? name : id;\r\n\r\n                li.appendChild(input);\r\n                li.appendChild(label);\r\n                ul.appendChild(li);\r\n            }\r\n        }\r\n\r\n        parentli.appendChild(ul);\r\n    }\r\n\r\n    /**\r\n     * 添加basemap图层控件点击事件\r\n     */\r\n    addBasemapEvent() {\r\n        this._map.once('load', () => {\r\n            let basemapgroup = document.getElementById('ml-basemap-group');\r\n            basemapgroup.addEventListener('click', e => {\r\n                if (e.target.name === 'ml-basemap-radio') {\r\n                    this.changeBaseMap(e);\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 添加overlay图层控件点击事件\r\n     */\r\n    addOverlaysEvent() {\r\n        this._map.once('load', () => {\r\n            //overlay layer li\r\n            let liarr = document.getElementsByClassName('ml-overlay-layer');\r\n            for (let i = 0; i < liarr.length; i++) {\r\n                let li = liarr[i];\r\n                let layerId = li.id;\r\n\r\n                li.addEventListener('click', e => {\r\n                    if (e.target.type === 'checkbox') {\r\n                        let checked = e.target.checked;\r\n                        let visibility = checked ? 'visible' : 'none';\r\n                        this._map.setLayoutProperty(layerId, 'visibility', visibility);\r\n                        this._checked[layerId] = checked;\r\n\r\n                        let parentul = e.target.parentNode.parentNode;\r\n                        this.layerCheckboxChanged(parentul);\r\n                    }\r\n                })\r\n            }\r\n\r\n            // overlay layergroup li\r\n            let liarr2 = document.getElementsByClassName('ml-overlay-group');\r\n            for (let i = 0; i < liarr2.length; i++) {\r\n                let li = liarr2[i];\r\n                let inputList = li.querySelectorAll('input');\r\n                let rootinput = inputList[0];\r\n\r\n                rootinput.addEventListener('change', e => {\r\n                    for (let j = 1; j < inputList.length; j++) {\r\n                        let input = inputList[j];\r\n                        let checked = rootinput.checked;\r\n                        input.checked = checked;\r\n\r\n                        if (input.name === 'ml-overlay-checkbox') {\r\n                            let visibility = checked ? 'visible' : 'none';\r\n                            let layerId = input.parentNode.id;\r\n                            this._map.setLayoutProperty(layerId, 'visibility', visibility);\r\n                            this._checked[layerId] = checked;\r\n\r\n                            let parentul = e.target.parentNode.parentNode;\r\n                            this.layergroupCheckboxChanged(parentul);\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 切换basemap\r\n     * @param {Event} e \r\n     */\r\n    changeBaseMap(e) {\r\n        let mapstyle = e.target.id;\r\n        this._map.setStyle(mapstyle, { diff: false }); // todo: 此处有性能损失，待评估\r\n\r\n        this._map.once('style.load', () => {\r\n            for (let layerId in this._checked) {\r\n                let visibility = this._checked[layerId] ? 'visible' : 'none';\r\n                this._map.setLayoutProperty(layerId, 'visibility', visibility);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 递归实现：图层组节点控件改变时其父节点控件相应响应事件\r\n     * @param {HTMLElement} parentul - ul元素节点\r\n     * @returns \r\n     */\r\n    layergroupCheckboxChanged(parentul) {\r\n        if (parentul.name !== 'ml-parentul') return;\r\n\r\n        let inputlist = parentul.querySelectorAll('input');\r\n        let childCheckCount = 0;\r\n        for (let i = 0; i < inputlist.length; i++) {\r\n            if (inputlist[i].checked) {\r\n                childCheckCount++;\r\n            }\r\n        }\r\n\r\n        if (childCheckCount === 0) {\r\n            parentul.parentNode.children[1].checked = false;\r\n        } else if (childCheckCount === inputlist.length) {\r\n            parentul.parentNode.children[1].checked = true;\r\n        } else {\r\n            // todo: 子节点不全checked情况\r\n        }\r\n\r\n        this.layergroupCheckboxChanged(parentul.parentNode.parentNode);\r\n    }\r\n\r\n    /**\r\n     * 递归实现：图层节点控件改变时其父节点控件相应响应事件\r\n     * @param {HTMLElement}} parentul - ul元素节点\r\n     * @returns \r\n     */\r\n    layerCheckboxChanged(parentul) {\r\n        if (parentul.name !== 'ml-parentul') return;\r\n\r\n        let inputlist = parentul.querySelectorAll('input');\r\n        let childCheckCount = 0;\r\n        for (let i = 0; i < inputlist.length; i++) {\r\n            if (inputlist[i].checked) {\r\n                childCheckCount++;\r\n            }\r\n        }\r\n\r\n        if (childCheckCount === 0) {\r\n            parentul.parentNode.children[1].checked = false;\r\n        } else if (childCheckCount === inputlist.length) {\r\n            parentul.parentNode.children[1].checked = true;\r\n        } else {\r\n            // todo: 子节点不全checked情况\r\n        }\r\n\r\n        this.layerCheckboxChanged(parentul.parentNode.parentNode);\r\n    }\r\n}\r\n\r\nexport default TreeSwitcher1;","import defaultValue from '../utils/defaultValue.js';\r\nimport SimpleSwitcher1 from '../template/SimpleSwitcher1.js';\r\nimport SimpleSwitcher2 from '../template/SimpleSwitcher2.js';\r\nimport TreeSwitcher1 from '../template/TreeSwitcher1.js';\r\n\r\nclass MapboxLayerSwitcher {\r\n    constructor(options = {}) {\r\n        this._template = defaultValue(options.template, 'simple1');\r\n        this._layers = defaultValue(options.layers, []);\r\n        this._activemode = defaultValue(options.activemode, 'none');\r\n    }\r\n\r\n    onAdd(map) {\r\n        this._map = map;\r\n        this._container = document.createElement('div');\r\n\r\n        switch (this._template) {\r\n            case 'simple1':\r\n                new SimpleSwitcher1(this._map, this._container, this._layers, this._activemode);\r\n                break;\r\n            case 'simple2':\r\n                new SimpleSwitcher2(this._map, this._container, this._layers, this._activemode);\r\n                break;\r\n            case 'tree1':\r\n                new TreeSwitcher1(this._map, this._container, this._layers, this._activemode);\r\n                break;\r\n            default:\r\n                console.error('the template parameters are illegal!')\r\n        }\r\n\r\n        return this._container;\r\n    }\r\n\r\n    onRemove() {\r\n        this._container.parentNode.removeChild(this._container);\r\n        this._map = undefined;\r\n    }\r\n\r\n}\r\n\r\nexport default MapboxLayerSwitcher;"],"names":["defaultValue","a","b","undefined","EMPTY_OBJECT","Object","freeze","SimpleSwitcher1","map","container","layers","activemode","_map","_container","_layers","_activemode","init","className","_panel","document","createElement","id","_panelContentStr","createLayerSwitcherBtn","layersClassify","createOverlaysPanel","createBasemapsPanel","innerHTML","appendChild","addPanelEvent","_overlays","_basemaps","i","length","layer","type","push","_layerSwitcherBtn","layerSwitcherBtnClicKMode","layerSwitcherBtnMouseOverMode","addEventListener","panelVis","style","display","setAttribute","on","basemaps","name","_checked","overlays","once","getElementById","e","target","attributes","layertype","nodeValue","changeBaseMap","changeOverlaysVisible","_update","mapstyle","setStyle","layerId","visibility","setLayoutProperty","checked","SimpleSwitcher2","diff","alinkArrLike","parentNode","children","alink","TreeSwitcher1","_panelContent","addBasemapEvent","addOverlaysEvent","len","li","label","innerText","ul","listr","button","btnClassname","includes","classList","remove","add","input","createSubTreeNode","parentli","overlay","basemapgroup","liarr","getElementsByClassName","parentul","layerCheckboxChanged","liarr2","inputList","querySelectorAll","rootinput","j","layergroupCheckboxChanged","inputlist","childCheckCount","MapboxLayerSwitcher","options","_template","template","console","error","removeChild"],"mappings":"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"}